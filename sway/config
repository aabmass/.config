## Disable xwayland?
# xwayland disable

########################### begin variables ###########################
# Super key
set $mod Mod4
set $confdir ~/.config/sway
set $swayexit $confdir/swayexit

# timeouts for idle management
set $blank_screen_timeout 120
set $lock_screen_timeout 300
set $suspend_timeout 600
########################### end variables ###########################

########################### begin modifications ###########################

# turn off disable while typing for trackpad
input 2:7:SynPS/2_Synaptics_TouchPad dwt disable

# start mako notification daemon early
exec mako

# dim/brighten screen
## use acpi_brightness python script I wrote instead!
bindsym XF86MonBrightnessUp exec ~/.local/bin/acpi-ease-backlight -d 0.15 inc 500
bindsym XF86MonBrightnessDown exec ~/.local/bin/acpi-ease-backlight -d 0.15 dec 500

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle

# Media player controls
# bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


### screenshots
# alt + shift + 4 screenshots an area and puts it in clipboard
bindsym mod1+Shift+4 exec "/home/aaron/local/bin/grim-area.sh"


### begin startup apps ###
# xrandr scripts to set the correct monitor settings
# exec ~/.screenlayout/twomonitors.sh

## basic gnome goodies
# polkit gnome agent -- allows apps to request password for authentication
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# TODO: get the global gtk theme etc.

output "*" bg sunset.jpg fill

# start battery notifications
exec i3-battery-popup -n -L 20 -t 30s

# start redshift
exec redshift-gtk

# start optimus manager applet
exec optimus-manager-qt

# volnoti to notify volume changes
exec volnoti

# pulseaudio applet
# exec /usr/bin/pasystray
exec pa-applet &
# exec /usr/bin/dropbox start

# networking
exec /usr/bin/nm-applet --indicator
# exec /usr/bin/wicd-gtk -t
# exec /usr/bin/wicd-client --tray

# desktop apps
exec /usr/bin/google-chrome-stable
exec /usr/bin/gnome-keyring-daemon -sd

### end startup apps ###

# For blank monitor with modes, use my script :D start with low
exec_always $confdir/swayidle_presets.py short

# inhibit idle for full screen chrome (like caffeine)
for_window [instance="google-chrome"] inhibit_idle fullscreen

# Add transparency effect to inactive windows. See cli args
exec /usr/share/sway/scripts/inactive-windows-transparency.py -o 0.8

# Shutdown dialog
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec $swayexit lock, mode "default"
    bindsym e exec $swayexit logout, mode "default"
    bindsym s exec $swayexit suspend, mode "default"
    bindsym h exec $swayexit hibernate, mode "default"
    bindsym r exec $swayexit reboot, mode "default"
    bindsym Shift+s exec $swayexit shutdown, mode "default"  
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+p mode "$mode_system"

########################### end modifications ###########################

# Super key
# set $mod Mod4

# Strange key between right alt and control
# set $mod 135

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:Roboto 10

# Use Mouse+$mod to drag floating windows to their wanted position
# floating_modifier $mod
floating_modifier Mod4

# start a terminal
bindsym $mod+Return exec "alacritty"

# start nautilus without desktop replacement
bindsym $mod+n exec "nautilus"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
## bindsym $mod+m exec i3-dmenu-desktop

# we'll use rofi instead
bindsym $mod+m exec rofi -show run

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec i3-dmenu-desktop

# change focus
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right


# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# not the best choice but otherwise duplicates
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

bindsym mod1+j move workspace to output up
bindsym mod1+k move workspace to output down

# switch to workspace left/right
bindsym $mod+y workspace prev
bindsym $mod+o workspace next

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload

# resize window (you can also use the mouse for that)
set $sizechange 5
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width $sizechange px or $sizechange ppt
        bindsym j resize grow height $sizechange px or $sizechange ppt
        bindsym k resize shrink height $sizechange px or $sizechange ppt
        bindsym l resize grow width $sizechange px or $sizechange ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width $sizechange px or $sizechange ppt
        bindsym Down resize grow height $sizechange px or $sizechange ppt
        bindsym Up resize shrink height $sizechange px or $sizechange ppt
        bindsym Right resize grow width $sizechange px or $sizechange ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

gaps inner 10
gaps outer 10

# use waybar
bar {
    swaybar_command waybar
}

# Remove blue window bar i3 uses
# TODO: not working :(
for_window [class="^.*"] border pixel 0
